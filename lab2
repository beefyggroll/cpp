#include <iostream>
#include <iomanip>
#include <cstring> 

class Student {
private:
    char surname[30];
    char name[30];
    char group[10];
    double grades[3]; 
    double average;  

public:
    void Insert() {
        std::cout << "Insert surname: ";
        std::cin.getline(surname, 30); 

        std::cout << "Insert name: ";
        std::cin.getline(name, 30); 

        std::cout << "Insert group: ";
        std::cin.getline(group, 10); 

        std::cout << "Insert grades for three exams:\n";
        for (int i = 0; i < 3; ++i) {
            double grade;
            while (true) {
                std::cout << "Grade " << (i + 1) << ": ";
                std::cin >> grade;

                if (grade >= 0 && grade <= 5) {
                    grades[i] = grade;
                    break; 
                } else {
                    std::cout << "Error: Grade must be between 0 and 5. Please try again.\n";
                }
            }
        }
        std::cin.ignore(); 
        CalculateAverage();
    }

    void CalculateAverage() {
        average = (grades[0] + grades[1] + grades[2]) / 3.0;
    }

    double GetAverage() const {
        return average;
    }

    void Display() const {
        std::cout << std::setw(20) << surname
                  << std::setw(20) << name
                  << std::setw(10) << group
                  << std::setw(13) << std::fixed << std::setprecision(2) << average
                  << std::setw(10) << grades[0]
                  << std::setw(10) << grades[1]
                  << std::setw(10) << grades[2] 
                  << std::endl;
    }

    bool IsAboveAverage(double threshold) const {
        return average >= threshold;
    }
};

class StudentList {
private:
    Student students[30];
    int count;

public:
    StudentList() : count(0) {}

    void AddStudent() {
        if (count < 30) { 
            students[count].Insert();
            count++; 
        } else {
            std::cout << "Student list is full.\n";
        }
    }

    void ViewStudentsAboveAverage(double threshold) const {
        std::cout << std::left << std::setw(20) << "Surname"
                  << std::setw(20) << "Name"
                  << std::setw(10) << "Group"
                  << std::setw(13) << "Avg Grade"
                  << std::setw(10) << "Exam 1"
                  << std::setw(10) << "Exam 2"
                  << std::setw(10) << "Exam 3" << std::endl;

        std::string line(100, '-');
        std::cout << line << std::endl;

        for (int i = 0; i < count; ++i) {
            if (students[i].IsAboveAverage(threshold)) {
                students[i].Display();
            }
        }
    }

    void ViewAllStudents() const {
        std::cout << std::left << std::setw(20) << "Surname"
                  << std::setw(20) << "Name"
                  << std::setw(10) << "Group"
                  << std::setw(13) << "Avg Grade"
                  << std::setw(10) << "Exam 1"
                  << std::setw(10) << "Exam 2"
                  << std::setw(10) << "Exam 3" << std::endl;

        std::string line(100, '-');
        std::cout << line << std::endl;

        for (int i = 0; i < count; ++i) {
            students[i].Display();
        }
    }
};

int main() {
    StudentList studentList;
    char choice;

    do {
        std::cout << "\nMenu:\n";
        std::cout << "1. Insert student data\n";
        std::cout << "2. View students with average grade >= 4.5\n";
        std::cout << "3. View all students\n";
        std::cout << "4. Exit\n";
        choice = getchar();
        while (getchar() != '\n');

        switch (choice) {
            case '1':
                studentList.AddStudent();
                break;
            case '2':
                studentList.ViewStudentsAboveAverage(4.5);
                break;
            case '3':
                studentList.ViewAllStudents();
                break;
            case '4':
                break; 
            default:
                std::cout << "Error. Enter a valid option\n";
                break;
        }

    } while (choice != '4');

    return 0;
}
